import{_ as o,c as l,a2 as n,j as e,a as s,G as t,B as r,o as h}from"./chunks/framework.C7KVE_tj.js";const E=JSON.parse('{"title":"BaseObject","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"api/baseobject.md","filePath":"api/baseobject.md","lastUpdated":1736910738000}'),d={name:"api/baseobject.md"};function p(c,a,k,g,u,m){const i=r("Badge");return h(),l("div",null,[a[16]||(a[16]=n(`<h1 id="baseobject" tabindex="-1">BaseObject <a class="header-anchor" href="#baseobject" aria-label="Permalink to &quot;BaseObject&quot;">​</a></h1><p>It is a super base class.</p><p>Its subclasses include:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>├─ Bar.ts </span></span>
<span class="line"><span>├─ Bars.ts </span></span>
<span class="line"><span>├─ Box.ts </span></span>
<span class="line"><span>├─ Boxs.ts </span></span>
<span class="line"><span>├─ ExtrudeLine.ts </span></span>
<span class="line"><span>├─ ExtrudeLines.ts </span></span>
<span class="line"><span>├─ ExtrudeLineTrail.ts </span></span>
<span class="line"><span>├─ ExtrudePolygon.ts </span></span>
<span class="line"><span>├─ ExtrudePolygons.ts </span></span>
<span class="line"><span>├─ FatLine.ts </span></span>
<span class="line"><span>├─ FatLines.ts </span></span>
<span class="line"><span>├─ HeatMap.ts </span></span>
<span class="line"><span>├─ Line.ts </span></span>
<span class="line"><span>├─ Lines.ts </span></span>
<span class="line"><span>├─ Model.ts </span></span>
<span class="line"><span>├─ Path.ts </span></span>
<span class="line"><span>├─ Paths.ts </span></span>
<span class="line"><span>├─ Point.ts</span></span>
<span class="line"><span>├─ Points.ts </span></span>
<span class="line"><span>├─ Terrain.ts</span></span></code></pre></div><p>Its API and maptalks Geometry is very similar</p><h2 id="constructor" tabindex="-1">constructor() <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor()&quot;">​</a></h2><p>Usually, we directly use its subclasses</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> baseObject</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BaseObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(id);</span></span></code></pre></div><h2 id="methods" tabindex="-1">methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;methods&quot;">​</a></h2><h3 id="initoptions-options-record-string-any" tabindex="-1"><code>_initOptions(options: Record&lt;string, any&gt;)</code> <a class="header-anchor" href="#initoptions-options-record-string-any" aria-label="Permalink to &quot;\`_initOptions(options: Record&lt;string, any&gt;)\`&quot;">​</a></h3>`,10)),e("p",null,[a[0]||(a[0]=s("init BaseObject inner config ")),t(i,{type:"tip",text:"for custom"})]),a[17]||(a[17]=n('<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_initOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(options);</span></span></code></pre></div><h3 id="createmesh-geometry-material" tabindex="-1"><code>_createMesh(geometry, material)</code> <a class="header-anchor" href="#createmesh-geometry-material" aria-label="Permalink to &quot;`_createMesh(geometry, material)`&quot;">​</a></h3>',2)),e("p",null,[a[1]||(a[1]=s("create inner ")),a[2]||(a[2]=e("code",null,"THREE.Mesh",-1)),a[3]||(a[3]=s()),t(i,{type:"tip",text:"for custom"})]),a[18]||(a[18]=n(`<div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> geometry</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> THREE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">CircleBufferGeometry</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(r, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    //Initialize internal object3d</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // https://github.com/maptalks/maptalks.three/blob/1e45f5238f500225ada1deb09b8bab18c1b52cf2/src/BaseObject.js#L140</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">_createMesh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(geometry, material);</span></span></code></pre></div><h3 id="creategroup" tabindex="-1"><code>_createGroup()</code> <a class="header-anchor" href="#creategroup" aria-label="Permalink to &quot;\`_createGroup()\`&quot;">​</a></h3>`,2)),e("p",null,[a[4]||(a[4]=s("create inner ")),a[5]||(a[5]=e("code",null,"THREE.Group",-1)),a[6]||(a[6]=s()),t(i,{type:"tip",text:"for custom"})]),a[19]||(a[19]=e("h3",{id:"createline-geometry-material",tabindex:"-1"},[e("code",null,"_createLine(geometry, material)"),s(),e("a",{class:"header-anchor",href:"#createline-geometry-material","aria-label":'Permalink to "`_createLine(geometry, material)`"'},"​")],-1)),a[20]||(a[20]=e("p",null,[s("create inner "),e("code",null,"THREE.Line")],-1)),a[21]||(a[21]=e("h3",{id:"createpoints-geometry-material",tabindex:"-1"},[e("code",null,"_createPoints(geometry, material)"),s(),e("a",{class:"header-anchor",href:"#createpoints-geometry-material","aria-label":'Permalink to "`_createPoints(geometry, material)`"'},"​")],-1)),e("p",null,[a[7]||(a[7]=s("create inner ")),a[8]||(a[8]=e("code",null,"THREE.Points",-1)),a[9]||(a[9]=s()),t(i,{type:"tip",text:"for custom"})]),a[22]||(a[22]=e("h3",{id:"createlinesegments-geometry-material",tabindex:"-1"},[e("code",null,"_createLineSegments(geometry, material)"),s(),e("a",{class:"header-anchor",href:"#createlinesegments-geometry-material","aria-label":'Permalink to "`_createLineSegments(geometry, material)`"'},"​")],-1)),e("p",null,[a[10]||(a[10]=s("create inner ")),a[11]||(a[11]=e("code",null,"THREE.LineSegments",-1)),a[12]||(a[12]=s()),t(i,{type:"tip",text:"for custom"})]),a[23]||(a[23]=e("h3",{id:"createinstancedmesh-geometry-material-count",tabindex:"-1"},[e("code",null,"_createInstancedMesh(geometry, material, count)"),s(),e("a",{class:"header-anchor",href:"#createinstancedmesh-geometry-material-count","aria-label":'Permalink to "`_createInstancedMesh(geometry, material, count)`"'},"​")],-1)),e("p",null,[a[13]||(a[13]=s("create inner ")),a[14]||(a[14]=e("code",null,"THREE.InstancedMesh",-1)),a[15]||(a[15]=s()),t(i,{type:"tip",text:"for custom"})]),a[24]||(a[24]=n('<h3 id="getobject3d" tabindex="-1"><code>getObject3d()</code> <a class="header-anchor" href="#getobject3d" aria-label="Permalink to &quot;`getObject3d()`&quot;">​</a></h3><p>get inner <code>THREE.Object3d</code> , <code>THREE.Mesh</code> , <code>THREE.Group</code> etc</p><h3 id="getoptions" tabindex="-1"><code>getOptions()</code> <a class="header-anchor" href="#getoptions" aria-label="Permalink to &quot;`getOptions()`&quot;">​</a></h3><p>get BaseObject options config</p><h3 id="addto-threelayer" tabindex="-1"><code>addTo(threeLayer)</code> <a class="header-anchor" href="#addto-threelayer" aria-label="Permalink to &quot;`addTo(threeLayer)`&quot;">​</a></h3><h3 id="remove" tabindex="-1"><code>remove()</code> <a class="header-anchor" href="#remove" aria-label="Permalink to &quot;`remove()`&quot;">​</a></h3><h3 id="getid" tabindex="-1"><code>getId()</code> <a class="header-anchor" href="#getid" aria-label="Permalink to &quot;`getId()`&quot;">​</a></h3><h3 id="setid-id-string" tabindex="-1"><code>setId(id:string)</code> <a class="header-anchor" href="#setid-id-string" aria-label="Permalink to &quot;`setId(id:string)`&quot;">​</a></h3><h3 id="getproperties" tabindex="-1"><code>getProperties()</code> <a class="header-anchor" href="#getproperties" aria-label="Permalink to &quot;`getProperties()`&quot;">​</a></h3><h3 id="setproperties-props-record-string-any" tabindex="-1"><code>setProperties(props: Record&lt;string, any&gt;)</code> <a class="header-anchor" href="#setproperties-props-record-string-any" aria-label="Permalink to &quot;`setProperties(props: Record&lt;string, any&gt;)`&quot;">​</a></h3><h3 id="getlayer-threelayer" tabindex="-1"><code>getLayer(): ThreeLayer</code> <a class="header-anchor" href="#getlayer-threelayer" aria-label="Permalink to &quot;`getLayer(): ThreeLayer`&quot;">​</a></h3><h3 id="getmap-map" tabindex="-1"><code>getMap(): Map</code> <a class="header-anchor" href="#getmap-map" aria-label="Permalink to &quot;`getMap(): Map`&quot;">​</a></h3><h3 id="getcenter-coordinate-null" tabindex="-1"><code>getCenter(): Coordinate|null</code> <a class="header-anchor" href="#getcenter-coordinate-null" aria-label="Permalink to &quot;`getCenter(): Coordinate|null`&quot;">​</a></h3><h3 id="getaltitude-number" tabindex="-1"><code>getAltitude():number</code> <a class="header-anchor" href="#getaltitude-number" aria-label="Permalink to &quot;`getAltitude():number`&quot;">​</a></h3><h3 id="setaltitude-altitude-number" tabindex="-1"><code>setAltitude(altitude: number)</code> <a class="header-anchor" href="#setaltitude-altitude-number" aria-label="Permalink to &quot;`setAltitude(altitude: number)`&quot;">​</a></h3><h3 id="getheight-number" tabindex="-1"><code>getHeight():number</code> <a class="header-anchor" href="#getheight-number" aria-label="Permalink to &quot;`getHeight():number`&quot;">​</a></h3><h3 id="setheight-height-number" tabindex="-1"><code>setHeight(height: number)</code> <a class="header-anchor" href="#setheight-height-number" aria-label="Permalink to &quot;`setHeight(height: number)`&quot;">​</a></h3><h3 id="show" tabindex="-1"><code>show()</code> <a class="header-anchor" href="#show" aria-label="Permalink to &quot;`show()`&quot;">​</a></h3><h3 id="hide" tabindex="-1"><code>hide()</code> <a class="header-anchor" href="#hide" aria-label="Permalink to &quot;`hide()`&quot;">​</a></h3><h3 id="isvisible-boolean" tabindex="-1"><code>isVisible():boolean</code> <a class="header-anchor" href="#isvisible-boolean" aria-label="Permalink to &quot;`isVisible():boolean`&quot;">​</a></h3><h3 id="setinfowindow-options" tabindex="-1"><code>setInfoWindow(options)</code> <a class="header-anchor" href="#setinfowindow-options" aria-label="Permalink to &quot;`setInfoWindow(options)`&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // //infowindow test</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   bar.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setInfoWindow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       content: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello world,height:&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> d.height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       title: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;message&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       animationDuration: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   });</span></span></code></pre></div><h3 id="getinfowindow" tabindex="-1"><code>getInfoWindow()</code> <a class="header-anchor" href="#getinfowindow" aria-label="Permalink to &quot;`getInfoWindow()`&quot;">​</a></h3><h3 id="openinfowindow-coordinate" tabindex="-1"><code>openInfoWindow(coordinate)</code> <a class="header-anchor" href="#openinfowindow-coordinate" aria-label="Permalink to &quot;`openInfoWindow(coordinate)`&quot;">​</a></h3><h3 id="closeinfowindow" tabindex="-1"><code>closeInfoWindow()</code> <a class="header-anchor" href="#closeinfowindow" aria-label="Permalink to &quot;`closeInfoWindow()`&quot;">​</a></h3><h3 id="removeinfowindow" tabindex="-1"><code>removeInfoWindow()</code> <a class="header-anchor" href="#removeinfowindow" aria-label="Permalink to &quot;`removeInfoWindow()`&quot;">​</a></h3><h3 id="settooltip-content-options" tabindex="-1"><code>setToolTip(content, options)</code> <a class="header-anchor" href="#settooltip-content-options" aria-label="Permalink to &quot;`setToolTip(content, options)`&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">   // // tooltip test</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   bar.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setToolTip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(d.height </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 400</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       showTimeout: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       eventsPropagation: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">       dx: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">   });</span></span></code></pre></div><h3 id="gettooltip" tabindex="-1"><code>getToolTip()</code> <a class="header-anchor" href="#gettooltip" aria-label="Permalink to &quot;`getToolTip()`&quot;">​</a></h3><h3 id="closetooltip" tabindex="-1"><code>closeToolTip()</code> <a class="header-anchor" href="#closetooltip" aria-label="Permalink to &quot;`closeToolTip()`&quot;">​</a></h3><h3 id="removetooltip" tabindex="-1"><code>removeToolTip()</code> <a class="header-anchor" href="#removetooltip" aria-label="Permalink to &quot;`removeToolTip()`&quot;">​</a></h3><h3 id="getminzoom" tabindex="-1"><code>getMinZoom()</code> <a class="header-anchor" href="#getminzoom" aria-label="Permalink to &quot;`getMinZoom()`&quot;">​</a></h3><h3 id="getmaxzoom" tabindex="-1"><code>getMaxZoom()</code> <a class="header-anchor" href="#getmaxzoom" aria-label="Permalink to &quot;`getMaxZoom()`&quot;">​</a></h3><h3 id="isasynchronous" tabindex="-1"><code>isAsynchronous()</code> <a class="header-anchor" href="#isasynchronous" aria-label="Permalink to &quot;`isAsynchronous()`&quot;">​</a></h3><p>Is it asynchronous, that is, constructing graphic data through workers</p><h3 id="on-eventname-handler-context" tabindex="-1"><code>on(eventName, handler, context)</code> <a class="header-anchor" href="#on-eventname-handler-context" aria-label="Permalink to &quot;`on(eventName, handler, context)`&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> clickHandler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bar.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, clickHandler);</span></span></code></pre></div><h3 id="once-eventname-handler-context" tabindex="-1"><code>once(eventName, handler, context)</code> <a class="header-anchor" href="#once-eventname-handler-context" aria-label="Permalink to &quot;`once(eventName, handler, context)`&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bar.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">once</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, clickHandler);</span></span></code></pre></div><h3 id="off-eventname-handler-context" tabindex="-1"><code>off(eventName, handler, context)</code> <a class="header-anchor" href="#off-eventname-handler-context" aria-label="Permalink to &quot;`off(eventName, handler, context)`&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bar.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">off</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, clickHandler);</span></span></code></pre></div><h2 id="events" tabindex="-1">events <a class="header-anchor" href="#events" aria-label="Permalink to &quot;events&quot;">​</a></h2><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> clickHandler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">bar.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click mousemove&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, clickHandler);</span></span></code></pre></div><h3 id="add" tabindex="-1">add <a class="header-anchor" href="#add" aria-label="Permalink to &quot;add&quot;">​</a></h3><h3 id="remove-1" tabindex="-1">remove <a class="header-anchor" href="#remove-1" aria-label="Permalink to &quot;remove&quot;">​</a></h3><h3 id="click" tabindex="-1">click <a class="header-anchor" href="#click" aria-label="Permalink to &quot;click&quot;">​</a></h3><h3 id="mousemove" tabindex="-1">mousemove <a class="header-anchor" href="#mousemove" aria-label="Permalink to &quot;mousemove&quot;">​</a></h3><h3 id="mouseover" tabindex="-1">mouseover <a class="header-anchor" href="#mouseover" aria-label="Permalink to &quot;mouseover&quot;">​</a></h3><h3 id="mouseout" tabindex="-1">mouseout <a class="header-anchor" href="#mouseout" aria-label="Permalink to &quot;mouseout&quot;">​</a></h3><h3 id="dblclick" tabindex="-1">dblclick <a class="header-anchor" href="#dblclick" aria-label="Permalink to &quot;dblclick&quot;">​</a></h3><h3 id="empty" tabindex="-1">empty <a class="header-anchor" href="#empty" aria-label="Permalink to &quot;empty&quot;">​</a></h3><h3 id="idchange" tabindex="-1">idchange <a class="header-anchor" href="#idchange" aria-label="Permalink to &quot;idchange&quot;">​</a></h3><h3 id="propertieschange" tabindex="-1">propertieschange <a class="header-anchor" href="#propertieschange" aria-label="Permalink to &quot;propertieschange&quot;">​</a></h3><h3 id="show-1" tabindex="-1">show <a class="header-anchor" href="#show-1" aria-label="Permalink to &quot;show&quot;">​</a></h3><h3 id="hide-1" tabindex="-1">hide <a class="header-anchor" href="#hide-1" aria-label="Permalink to &quot;hide&quot;">​</a></h3><h3 id="symbolchange" tabindex="-1">symbolchange <a class="header-anchor" href="#symbolchange" aria-label="Permalink to &quot;symbolchange&quot;">​</a></h3><h3 id="workerload" tabindex="-1">workerload <a class="header-anchor" href="#workerload" aria-label="Permalink to &quot;workerload&quot;">​</a></h3><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>This event will only be triggered by constructing graphic data through workers</p></div>',58))])}const y=o(d,[["render",p]]);export{E as __pageData,y as default};
